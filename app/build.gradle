apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//配置了apply plugin: 'com.android.application'后， module作为app使用才有android{…}
android {

    //region 基本不动的 啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦

    //编译使用的sdk版本(必要的)
    compileSdkVersion rootProject.compileSdkVersion

    //请求使用一个lib库
    useLibrary 'org.apache.http.legacy'

    //dataBinding
    dataBinding {
        enabled true
    }

    //通过注解支持kotlin数据类序列化
    androidExtensions {
        experimental = true
    }

    //Dex可选项参数
    dexOptions {
        //是否预先dex库，它可以改善增量的生成，但是在clear build可能会变慢
        preDexLibraries = false
        //使用jumbo(庞大的)模式
        jumboMode = false
        //可以使用Dex的最大并发进程数。默认为4。
        maxProcessCount 4
        //当dx运行时使用的线程的数量。默认4个。
        threadCount 6
        //当调用dx时指定-Xmx值
        javaMaxHeapSize "6g"
        incremental true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 打包可选参数
    packagingOptions {
        //exclude表示打包时排除出apk
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/ASM-LICENSE.txt'
        exclude 'META-INF/ASM-LICENSE'
        exclude 'asm-license.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    //打包文件名
    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName = "${variant.applicationId}_V${variant.versionName}_build${variant.versionCode}_${variant.buildType.name}_${variant.name}.apk"
            outputFileName = fileName
        }
    }

    //构建类型配置
    buildTypes {
        release {
            //是否混淆
            minifyEnabled true
            //是否去除未利用的资源，默认false，表示不去除
            shrinkResources true
            //混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //endregion

    //资源文件目录指定
    sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }

    defaultConfig {
        applicationId "com.cgy.chengy.demofactory"
        //设置支持最低手机的版本
        minSdkVersion rootProject.minSdkVersion
        //使用哪个版本的api特性
        targetSdkVersion rootProject.targetSdkVersion
        //是否分包
        multiDexEnabled true
        //mdk支持的手机内核
        ndk { abiFilters = ["armeabi-v7a"] }
        //Vector图像配置
        vectorDrawables.useSupportLibrary = true
        //测试使用环境（默认配置）
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //阿里云OSS存储
        buildConfigField 'String', 'ALIYUN_ENDPOINT', '"oss-cn-hangzhou.aliyuncs.com"'
        buildConfigField 'String', 'ALIYUN_BUCKET_NAME', '"head-photo"'
        //版本号
        versionCode 1
        //版本名
        versionName "1.0.1"
    }

    //指定flavor维度可选集合，gradle3.0之后，配置flavor必须有
    flavorDimensions "mode"

}

//依赖冲突解决，强制jar包版本
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$supportLibraryVersion"
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    provided files('libs/gson-2.7.jar')
    //测试框架
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$testEspressoVersion"
    //support包
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesAndroidVersion"
    //webSocket
    implementation 'com.neovisionaries:nv-websocket-client:2.+'
    //logger日志打印工具
    implementation "com.orhanobut:logger:$loggerVersion"
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    //下拉刷新控件---给webView下拉刷新用
    implementation 'com.mylhyl:commonrefreshlayout:2.4'
    implementation 'com.github.razerdp:BasePopup:2.1.8'
    //table控件
    implementation 'com.github.huangyanbin:SmartTable:2.2.0'
}
